// Nombre del archivo: firestore.rules (en la ra√≠z del proyecto)
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isMasterAdmin() {
      return hasRole('master_admin');
    }
    
    function isCompanyAdmin() {
      return hasRole('company_admin') || isMasterAdmin();
    }
    
    function isCompanyUser() {
      return hasRole('company_user') || isCompanyAdmin();
    }

    // Users collection
    match /users/{userId} {
      // Usuarios pueden leer y actualizar su propio perfil
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && isOwner(userId);
      
      // Master admins pueden leer y modificar cualquier usuario
      allow read, write: if isMasterAdmin();
    }

    // Companies collection
    match /companies/{companyId} {
      // Company admins pueden gestionar su empresa
      allow read: if isAuthenticated() && 
                     (resource.data.adminIds.hasAny([request.auth.uid]) || isMasterAdmin());
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
                               (resource.data.adminIds.hasAny([request.auth.uid]) || isMasterAdmin());
    }

    // Jobs collection
    match /jobs/{jobId} {
      // Company users pueden ver jobs de su empresa
      allow read: if isCompanyUser();
      allow create: if isCompanyAdmin();
      allow update, delete: if isCompanyAdmin();
    }

    // Interviews collection
    match /interviews/{interviewId} {
      // Usuarios autenticados pueden ver sus entrevistas
      allow read: if isAuthenticated() && 
                     (resource.data.userId == request.auth.uid || 
                      resource.data.interviewerId == request.auth.uid ||
                      isCompanyAdmin());
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                       (resource.data.userId == request.auth.uid || isCompanyAdmin());
      allow delete: if isCompanyAdmin();
    }

    // Candidates collection
    match /candidates/{candidateId} {
      // Company users pueden ver candidatos
      allow read: if isCompanyUser();
      allow create: if isAuthenticated();
      allow update, delete: if isCompanyAdmin();
    }

    // Call logs collection (para Retell AI)
    match /call_logs/{callId} {
      allow read, write: if isAuthenticated();
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}